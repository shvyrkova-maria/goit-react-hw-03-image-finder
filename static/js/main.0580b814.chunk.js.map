{"version":3,"sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","components/Spinner/Spinner.styled.js","components/Spinner/Spinner.jsx","components/ImageGalleryItem/placeholder-image.jpg","components/ImageGalleryItem/ImageGalleryItem.styled.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.js","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","services/pixabayApi.js","App.jsx","index.js"],"names":["Header","SearchForm","SearchFormButton","SearchInput","DebounceInput","INITIAL_STATE","value","Searchbar","state","handleChange","event","setState","target","toLowerCase","handleSubmit","preventDefault","props","toast","onSubmit","trim","error","formReset","this","type","onChange","debounceTimeout","autoComplete","autoFocus","placeholder","Component","LoaderContainer","Spinner","color","height","width","timeout","GalleryItem","GalleryImage","ImageGalleryItem","id","imageSrc","alt","onClick","src","loading","defaultProps","defaultImage","Gallery","ImageGallery","images","onImageClick","map","webformatURL","largeImageURL","tags","LoadMoreBtn","Button","Container","Message","Notification","text","Overlay","ModalContent","modalRoot","document","querySelector","Modal","handleKeyDown","code","closeModal","handleOnOverlayClick","currentTarget","window","addEventListener","removeEventListener","createPortal","children","fetchImages","searchQuery","page","url","fetch","then","response","ok","json","statusText","Status","App","status","activeImage","fetchImagesOnClick","hits","length","scrollTo","top","body","scrollHeight","behavior","catch","handleSubmitForm","handleButtonClick","resetActiveImage","handleImageClick","prevProps","prevState","position","containerStyle","toastOptions","style","border","padding","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0580b814.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nexport const Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SearchFormButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const SearchInput = styled(DebounceInput)`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Header,\r\n  SearchForm,\r\n  SearchFormButton,\r\n  SearchInput,\r\n} from 'components/Searchbar/Searchbar.styled';\r\n\r\nconst INITIAL_STATE = {\r\n  value: '',\r\n};\r\n\r\nclass Searchbar extends Component {\r\n  static propTypes = {\r\n    toast: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { value } = this.state;\r\n    const { toast, onSubmit } = this.props;\r\n\r\n    if (value.trim() === '') {\r\n      toast.error('Type a keyword to start searching images');\r\n    }\r\n\r\n    onSubmit(value);\r\n    this.formReset();\r\n  };\r\n\r\n  formReset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { handleChange, handleSubmit } = this;\r\n    return (\r\n      <Header>\r\n        <SearchForm onSubmit={handleSubmit}>\r\n          <SearchFormButton type=\"submit\" />\r\n          <SearchInput\r\n            type=\"text\"\r\n            value={this.state.value}\r\n            onChange={handleChange}\r\n            debounceTimeout={1000}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </SearchForm>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const LoaderContainer = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import Loader from 'react-loader-spinner';\r\nimport { LoaderContainer } from './Spinner.styled';\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <LoaderContainer>\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={5000}\r\n      />\r\n    </LoaderContainer>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","export default __webpack_public_path__ + \"static/media/placeholder-image.02524fcc.jpg\";","import styled from '@emotion/styled/macro';\r\n\r\nexport const GalleryItem = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const GalleryImage = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport defaultImage from 'components/ImageGalleryItem/placeholder-image.jpg';\r\nimport {\r\n  GalleryItem,\r\n  GalleryImage,\r\n} from 'components/ImageGalleryItem/ImageGalleryItem.styled';\r\n\r\nfunction ImageGalleryItem({ id, imageSrc, alt, onClick }) {\r\n  return (\r\n    <GalleryItem>\r\n      <GalleryImage\r\n        id={id}\r\n        src={imageSrc}\r\n        alt={alt}\r\n        loading=\"lazy\"\r\n        onClick={onClick}\r\n      />\r\n    </GalleryItem>\r\n  );\r\n}\r\n\r\nImageGalleryItem.defaultProps = {\r\n  imageSrc: defaultImage,\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageSrc: PropTypes.string,\r\n  alt: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const Gallery = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from 'components/ImageGalleryItem/ImageGalleryItem';\r\nimport { Gallery } from 'components/ImageGallery/ImageGallery.styled';\r\n\r\nfunction ImageGallery({ images, onImageClick }) {\r\n  return (\r\n    <Gallery>\r\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          id={id}\r\n          imageSrc={webformatURL}\r\n          onClick={() => onImageClick({ id, largeImageURL, tags })}\r\n          alt={tags}\r\n        />\r\n      ))}\r\n    </Gallery>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      webformatURL: PropTypes.string,\r\n      largeImageURL: PropTypes.string,\r\n      tags: PropTypes.string,\r\n    }),\r\n  ),\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const LoadMoreBtn = styled.button`\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { LoadMoreBtn } from 'components/Button/Button.styled';\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <LoadMoreBtn type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </LoadMoreBtn>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: inline-block;\r\n  text-align: center;\r\n  padding: 15px;\r\n  border: 1px solid red;\r\n`;\r\n\r\nexport const Message = styled.p`\r\n  font-size: 16px;\r\n  text-transform: uppercase;\r\n  color: red;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport {\r\n  Container,\r\n  Message,\r\n} from 'components/Notification/Notification.styled';\r\n\r\nfunction Notification({ text }) {\r\n  return (\r\n    <Container>\r\n      <Message>{text}</Message>\r\n    </Container>\r\n  );\r\n}\r\n\r\nNotification.defaultProps = {\r\n  text: 'Something went wrong, please try again later ',\r\n};\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { Overlay, ModalContent } from 'components/Modal/Modal.styled';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  handleOnOverlayClick = event => {\r\n    if (event.target === event.currentTarget) {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <Overlay onClick={this.handleOnOverlayClick}>\r\n        <ModalContent>{this.props.children}</ModalContent>\r\n      </Overlay>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","const BASE_URL = 'https://pixabay.com/api';\r\nconst API_KEY = '21768935-3fedd5c602a3f7ac5e18d4c15';\r\n\r\nfunction fetchImages(searchQuery, page) {\r\n  const url = `${BASE_URL}/?key=${API_KEY}&q=${searchQuery}&image_type=photo&orientation=horizontal&page=${page}&per_page=12`;\r\n  return fetch(url).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return response.statusText;\r\n  });\r\n}\r\n\r\nexport default fetchImages;\r\n","import { Component } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport Spinner from 'components/Spinner/Spinner';\nimport ImageGallery from 'components/ImageGallery/ImageGallery';\nimport Button from 'components/Button/Button';\nimport Notification from 'components/Notification/Notification';\nimport Modal from 'components/Modal/Modal';\nimport fetchImages from 'services/pixabayApi';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nclass App extends Component {\n  state = {\n    status: Status.IDLE,\n    searchQuery: '',\n    page: 1,\n    images: [],\n    activeImage: null,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { page, searchQuery } = this.state;\n\n    if (prevState.searchQuery !== searchQuery) {\n      this.setState({ images: [] });\n      this.fetchImagesOnClick(searchQuery, page);\n    }\n\n    if (prevState.page !== page && page !== 1) {\n      this.fetchImagesOnClick(searchQuery, page);\n    }\n  }\n\n  fetchImagesOnClick = (searchQuery, page) => {\n    this.setState({ status: Status.PENDING });\n\n    fetchImages(searchQuery, page)\n      .then(({ hits }) => {\n        if (hits.length === 0) {\n          this.setState({ status: Status.IDLE });\n          toast.error(\"Sorry, we couldn't find any matches\");\n        } else {\n          this.setState(({ images }) => ({\n            images: [...images, ...hits],\n            status: Status.RESOLVED,\n          }));\n\n          window.scrollTo({\n            top: document.body.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      })\n      .catch(error => {\n        this.setState({ error, status: Status.REJECTED });\n      });\n  };\n\n  handleSubmitForm = value => {\n    this.setState({ searchQuery: value, page: 1 });\n  };\n\n  handleButtonClick = () => {\n    this.setState(({ page }) => ({\n      page: page + 1,\n    }));\n  };\n\n  resetActiveImage = () => {\n    this.setState({ activeImage: null });\n  };\n\n  handleImageClick = activeImage => {\n    this.setState({ activeImage });\n  };\n\n  render() {\n    const {\n      handleSubmitForm,\n      handleButtonClick,\n      handleImageClick,\n      resetActiveImage,\n    } = this;\n\n    const { images, error, status, activeImage } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={handleSubmitForm} toast={toast} />\n        {status === Status.IDLE && <></>}\n        {status === Status.PENDING && <Spinner />}\n        {status === Status.REJECTED && <Notification text={error} />}\n        {status === Status.RESOLVED && (\n          <>\n            <ImageGallery images={images} onImageClick={handleImageClick} />\n            <Button onClick={handleButtonClick} />\n            {activeImage && (\n              <Modal closeModal={resetActiveImage}>\n                <img src={activeImage.largeImageURL} alt={activeImage.tags} />\n              </Modal>\n            )}\n          </>\n        )}\n        <Toaster\n          position=\"top-right\"\n          containerStyle={{ top: 100 }}\n          toastOptions={{\n            style: {\n              border: '1px solid #3f51b5',\n              padding: '12px',\n              color: '#212121',\n            },\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}